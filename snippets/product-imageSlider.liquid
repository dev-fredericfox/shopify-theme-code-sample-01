{% assign images = product.media | where: "media_type", "image" %}
<div class="flex">
    <div class="mr-20 grid-cols-1 gap-15 content-center pb-23 hidden-mobile">
        {% for image in images %}
            {% if forloop.index == 1 %}
                {% continue %}
            {% else %}
                <div class="radius-3 overflow-hidden max-w-100 max-h-100">
                    <img src="{{ image | image_url: width: 100}}" height="100" width="100" loading="lazy">
                </div>
            {% endif %}
        {% endfor %}
    </div>
    <div id="leftMobImageWrapper" class="hidden-desktop mr-7 max-w-13 mob-max-h-350 overflow-hidden radius-r-5">
        <img  id="leftMobImage" src="{{ images[4] | image_url: width: 350 }}" height="350" width="350" loading="lazy">
    </div>
    <div class="w-480 mob-max-w-350 mob-mx-auto">
        <div id="mainImageWrapper" class="radius-5 overflow-hidden max-h-480 mob-max-h-350">
            <img  id="mainImage" src="{{ images[0] | image_url: width: 480 }}" height="100%" width="100%" loading="lazy">
        </div>
        <div class="flex w-480 h-23">
            <div id="image-backwards" class="ml-auto w-23 hidden-mobile"><</div>
            <div id="image-forwards" class="mr-auto w-23 hidden-mobile">></div>
        </div>
        <div class="flex mob-flex-row mob-justify-center">
            {% for image in images %}
                <div class="h-10 w-10 radius-full color-background-3 hidden-desktop"><span></span></div>
            {% endfor %}
        </div>
    </div>
    <div id="rightMobImageWeapper" class="hidden-desktop ml-7 max-w-13 mob-max-h-350 overflow-hidden radius-l-5">
        <img  id="rightMobImage" src="{{ images[1] | image_url: width: 350 }}" height="350" width="350" loading="lazy">
    </div>
</div>


<script>
let imageArray = []
{% for image in images %}
    imageArray.push('<img id="mainImage" src="{{ image | image_url: width: 480}}" height="480" width="480" loading="lazy">')
{% endfor %}
let currentImageIndex = 0
let mobImageIndexMinusOne = currentImageIndex+1
let mobImageIndexPlusOne = imageArray.length-1
const mainImage = document.querySelector('#mainImage')
const leftMobImageWrapper = document.querySelector('#leftMobImageWrapper')
const rightMobImageWeapper = document.querySelector('#rightMobImageWeapper')
const mainImageWrapper = document.querySelector('#mainImageWrapper')
const imageBackwards = document.querySelector('#image-backwards').addEventListener("click", previousImage)
const imageForwards = document.querySelector('#image-forwards').addEventListener("click", nextImage)
function previousImage() {
    if (currentImageIndex > 0) {
        currentImageIndex--
    } else {
        currentImageIndex = (imageArray.length-1)
    }
    mainImageWrapper.innerHTML = imageArray[currentImageIndex]
    if (mobImageIndexMinusOne  > 0) {
        mobImageIndexMinusOne--
    } else {
        mobImageIndexMinusOne = (imageArray.length-1)
    }
    rightMobImageWeapper.innerHTML =  imageArray[mobImageIndexMinusOne]
    if (mobImageIndexPlusOne  > 0) {
        mobImageIndexPlusOne--
    } else {
        mobImageIndexPlusOne = (imageArray.length-1)
    }
    leftMobImageWrapper.innerHTML =  imageArray[mobImageIndexPlusOne]
}
function nextImage() {
    if (currentImageIndex < (imageArray.length-1)) {
        currentImageIndex++
    } else {
        currentImageIndex = 0
    }
    mainImageWrapper.innerHTML = imageArray[currentImageIndex]
    if (mobImageIndexMinusOne < (imageArray.length-1)) {
        mobImageIndexMinusOne++
    } else {
        mobImageIndexMinusOne = 0
    }
    rightMobImageWeapper.innerHTML =  imageArray[mobImageIndexMinusOne]
    if (mobImageIndexPlusOne < (imageArray.length-1)) {
        mobImageIndexPlusOne++
    } else {
        mobImageIndexPlusOne = 0
    }
     leftMobImageWrapper.innerHTML =  imageArray[mobImageIndexPlusOne]
}


let touchstartX = 0
let touchendX = 0


function handleGesture() {
  if (touchendX < touchstartX) nextImage()
  if (touchendX > touchstartX) previousImage()
}

mainImageWrapper.addEventListener('touchstart', e => {
  touchstartX = e.changedTouches[0].screenX
})

mainImageWrapper.addEventListener('touchend', e => {
  touchendX = e.changedTouches[0].screenX
  handleGesture()
})
</script>
